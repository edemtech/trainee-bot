// –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Å–Ω–æ–≤–Ω–æ–π –ª–æ–≥–∏–∫–∏
const Database = require('./src/database/database');
const { exercises, goals, fitnessLevels } = require('./src/data/exercises');
const { validateUserProfile, getRandomExercises } = require('./src/utils');

async function testDatabase() {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
    
    const db = new Database();
    
    // –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    const testUser = {
        telegram_id: 123456789,
        username: 'test_user',
        first_name: '–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
    };
    
    try {
        // –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await db.createOrUpdateUser(testUser);
        console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω');
        
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
        const profile = {
            age: '26-35',
            gender: 'male',
            fitness_level: 'intermediate',
            goals: 'mass_gain'
        };
        
        await db.updateUserProfile(testUser.telegram_id, profile);
        console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω');
        
        // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const user = await db.getUser(testUser.telegram_id);
        console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–µ–Ω:', user.first_name);
        
        // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
        const testWorkout = {
            muscle: 'chest',
            exercises: exercises.chest.exercises.slice(0, 3),
            goal: 'mass_gain'
        };
        
        await db.saveWorkout(testUser.telegram_id, testWorkout, '–¢–µ—Å—Ç–æ–≤–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –≥—Ä—É–¥–∏');
        console.log('‚úÖ –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞');
        
        // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
        const savedWorkouts = await db.getSavedWorkouts(testUser.telegram_id);
        console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫:', savedWorkouts.length);
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ë–î:', error);
    } finally {
        db.close();
    }
}

function testExerciseData() {
    console.log('\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π...');
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö
    Object.keys(exercises).forEach(muscle => {
        const muscleData = exercises[muscle];
        console.log(`‚úÖ ${muscleData.name}: ${muscleData.exercises.length} —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π`);
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–≤–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è
        const firstExercise = muscleData.exercises[0];
        if (firstExercise.mass_gain && firstExercise.fat_burn && firstExercise.maintenance) {
            console.log(`   ‚úÖ –£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ "${firstExercise.name}" –∏–º–µ–µ—Ç –≤—Å–µ —Ü–µ–ª–∏`);
        } else {
            console.log(`   ‚ùå –£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ "${firstExercise.name}" –Ω–µ–ø–æ–ª–Ω–æ–µ`);
        }
    });
    
    // –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞
    const randomChestExercises = getRandomExercises(exercises.chest.exercises, 3);
    console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Å–ª—É—á–∞–π–Ω—ã—Ö —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –¥–ª—è –≥—Ä—É–¥–∏: ${randomChestExercises.length}`);
}

function testValidation() {
    console.log('\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏...');
    
    const completeProfile = {
        age: '26-35',
        gender: 'male', 
        fitness_level: 'intermediate',
        goals: 'mass_gain'
    };
    
    const incompleteProfile = {
        age: '26-35',
        gender: 'male'
    };
    
    const completeValidation = validateUserProfile(completeProfile);
    const incompleteValidation = validateUserProfile(incompleteProfile);
    
    console.log('‚úÖ –ü–æ–ª–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –≤–∞–ª–∏–¥–µ–Ω:', completeValidation.isValid);
    console.log('‚úÖ –ù–µ–ø–æ–ª–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –≤–∞–ª–∏–¥–µ–Ω:', !incompleteValidation.isValid);
    console.log('‚úÖ –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–æ–ª—è:', incompleteValidation.missing);
}

// –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
async function runTests() {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ TraineeBot...\n');
    
    testExerciseData();
    testValidation();
    await testDatabase();
    
    console.log('\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!');
    console.log('\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
    console.log('1. –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ —É @BotFather –≤ Telegram');
    console.log('2. –î–æ–±–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω –≤ —Ñ–∞–π–ª .env');
    console.log('3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π: npm start');
}

// –ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
    runTests().catch(console.error);
}

module.exports = { testDatabase, testExerciseData, testValidation };
