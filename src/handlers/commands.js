const { exercises, goals, fitnessLevels } = require('../data/exercises');

async function handleStart(bot, msg, db) {
    const chatId = msg.chat.id;
    const user = msg.from;

    try {
        // –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
        await db.createOrUpdateUser({
            telegram_id: user.id,
            username: user.username,
            first_name: user.first_name
        });

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø–æ–ª–Ω–µ–Ω –ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const existingUser = await db.getUser(user.id);
        
        if (!existingUser || !existingUser.age || !existingUser.gender || !existingUser.fitness_level || !existingUser.goals) {
            // –ï—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω, –Ω–∞—á–∏–Ω–∞–µ–º —Å–±–æ—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
            await bot.sendMessage(chatId, 
                `–ü—Ä–∏–≤–µ—Ç, ${user.first_name}! üëã\n\n` +
                `–Ø —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ñ–∏—Ç–Ω–µ—Å-–±–æ—Ç! üí™\n\n` +
                `–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –º–Ω–µ –Ω—É–∂–Ω–æ —É–∑–Ω–∞—Ç—å –æ —Ç–µ–±–µ –±–æ–ª—å—à–µ.\n` +
                `–î–∞–≤–∞–π –∑–∞–ø–æ–ª–Ω–∏–º —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å!`,
                {
                    reply_markup: {
                        inline_keyboard: [[
                            { text: "üìù –ó–∞–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å", callback_data: "setup_profile" }
                        ]]
                    }
                }
            );
        } else {
            // –ï—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –∑–∞–ø–æ–ª–Ω–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            await showMainMenu(bot, chatId, user.first_name);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –≤ handleStart:', error);
        await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
}

async function handleHelp(bot, msg) {
    const chatId = msg.chat.id;
    
    const helpText = `
ü§ñ *–ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞*

*–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*
/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

*–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞:*
‚Ä¢ üèãÔ∏è –ü–æ–¥–±–æ—Ä —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –ø–æ –≥—Ä—É–ø–ø–∞–º –º—ã—à—Ü
‚Ä¢ üéØ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥ –≤–∞—à–∏ —Ü–µ–ª–∏
‚Ä¢ üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ª—é–±–∏–º—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
‚Ä¢ üìä –£—á–µ—Ç —É—Ä–æ–≤–Ω—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏

*–ì—Ä—É–ø–ø—ã –º—ã—à—Ü:*
‚Ä¢ –ì—Ä—É–¥—å üí™
‚Ä¢ –°–ø–∏–Ω–∞ ü¶µ
‚Ä¢ –ù–æ–≥–∏ ü¶µ
‚Ä¢ –ü–ª–µ—á–∏ üî∫
‚Ä¢ –†—É–∫–∏ üí™
‚Ä¢ –ü—Ä–µ—Å—Å üü°

*–¶–µ–ª–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫:*
‚Ä¢ –ù–∞–±–æ—Ä –º–∞—Å—Å—ã
‚Ä¢ –°–∂–∏–≥–∞–Ω–∏–µ –∂–∏—Ä–∞
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ñ–æ—Ä–º—ã

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏!
    `;
    
    await bot.sendMessage(chatId, helpText, { parse_mode: 'Markdown' });
}

async function showMainMenu(bot, chatId, firstName) {
    const keyboard = {
        inline_keyboard: [
            [
                { text: "üí™ –ì—Ä—É–¥—å", callback_data: "muscle_chest" },
                { text: "ü¶µ –°–ø–∏–Ω–∞", callback_data: "muscle_back" }
            ],
            [
                { text: "ü¶µ –ù–æ–≥–∏", callback_data: "muscle_legs" },
                { text: "üî∫ –ü–ª–µ—á–∏", callback_data: "muscle_shoulders" }
            ],
            [
                { text: "üí™ –†—É–∫–∏", callback_data: "muscle_arms" },
                { text: "üü° –ü—Ä–µ—Å—Å", callback_data: "muscle_abs" }
            ],
            [
                { text: "üíæ –ú–æ–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏", callback_data: "my_workouts" },
                { text: "‚öôÔ∏è –ü—Ä–æ—Ñ–∏–ª—å", callback_data: "profile" }
            ]
        ]
    };

    await bot.sendMessage(chatId, 
        `–ü—Ä–∏–≤–µ—Ç, ${firstName}! üëã\n\n` +
        `–í—ã–±–µ—Ä–∏ –≥—Ä—É–ø–ø—É –º—ã—à—Ü –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:`,
        { reply_markup: keyboard }
    );
}

module.exports = {
    handleStart,
    handleHelp,
    showMainMenu
};
